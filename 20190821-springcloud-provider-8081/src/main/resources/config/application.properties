server.port=8081
server.servlet.context-path=/

spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/teach?useSSL=false
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource

mybatis.type-aliases-package=com.aaa.lee.springcloud.model
mybatis.mapper-locations=classpath:mapper/*Mapper.xml

# 配置在eureka中显示的服务名(Application)
spring.application.name=user-provider

# 配置eureka
# 是在eureka服务中心的实例id(不能重复，相当于在mysql数据库的表中的主键)，名字可以随意起，开心就好
eureka.instance.instance-id=user-provider-8081
# 配置eureka服务地址(这个provider需要注册进服务中心，必须要知道服务中心的ip)
eureka.client.service-url.defaultZone=http://eureka01:6081/eureka,http://eureka02:6082/eureka,http://eureka03:6083/eureka
# 显示IP地址(springcloud2.x已经废弃了这个配置(在springcloud1.x中当初设计这个配置只是为了兼容浏览器))
eureka.instance.prefer-ip-address=true
# 根据配置显示出所注册进服务中心的信息
# 解决的问题就是为了很清晰的显示出所有的服务提供者具体的项目信息
# 相当于在页面<a href="info">--->跳转到controller的@RequestMapping("/info")
# 根据公司不同，配置也不同，标准化配置可以直接搜索 eureka注册中心服务提供者的info信息
# 自己随便写(只要以info开头，其他的随意)
info.author.name=Seven Lee
info.company.name=AAA EDU
info.project.description=This is Demo
info.djakfhkasgf=eqwui3213678

# 配置eureka
# 规定自己向eureka发送的心跳时间(单位是秒)
# 在eureka中一般服务没有被用到的时候，默认是没有心跳的
# 也就是说provider会不间断向eureka发送心跳(不会再出现没有心跳的状态)
#eureka.instance.lease-renewal-interval-in-seconds=5
# 当eureka最后一次检测到心跳的间隔时间(单位是秒)
# eg：eureka最后一次检测到服务的时间为9:06,8秒之后无法检测到该服务心跳的时候直接把服务剔除
#eureka.instance.lease-expiration-duration-in-seconds=8
# zipkin服务器端地址
spring.zipkin.base-url=http://localhost:4081
# 调用链信息采集样率
spring.sleuth.sampler.probability=1.0